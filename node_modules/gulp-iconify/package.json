{
  "name": "gulp-iconify",
  "version": "0.3.2",
  "description": "'A mystical CSS icon solution', grunticon-like build system.",
  "author": {
    "name": "Gabrijel GavranoviÄ‡",
    "email": "gabrijel@gavro.nl",
    "url": "http://gavro.nl"
  },
  "keywords": [
    "gulpplugin",
    "base64",
    "svg",
    "css",
    "image",
    "grunticon"
  ],
  "repository": {
    "type": "git",
    "url": "git@github.com:gavro/gulp-iconify.git"
  },
  "main": "index.js",
  "dependencies": {
    "fs": "*",
    "path": "*",
    "domain": "*",
    "gulp": "*",
    "gulp-util": "~3.0.4",
    "mustache": "~2.0.0",
    "through": "~2.3.6",
    "through2": "~0.6.3",
    "imacss": "~0.3.0",
    "gulp-svg2png": "~0.3.0",
    "gulp-sass": "~1.3.3",
    "svgo": "~0.5.0",
    "del": "~1.1.1",
    "xmldom": "~0.1.19"
  },
  "bugs": {
    "url": "https://github.com/gavro/gulp-iconify/issues"
  },
  "homepage": "https://github.com/gavro/gulp-iconify",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "license": "MIT",
  "readme": "gulp-iconify\n============\n\n'A mystical CSS icon solution', [grunticon](https://github.com/filamentgroup/grunticon)-like build system for [Gulp](https://github.com/gulpjs/gulp):\n\n'~~grunticon is a Grunt.js~~ gulp-iconify is a gulp task that makes it easy to manage icons and background images for all devices, preferring HD (retina) SVG icons but also provides fallback support for standard definition browsers, and old browsers alike. From a CSS perspective, it's easy to use, as it generates a class referencing each icon, and doesn't use CSS sprites.'\n\n\n##Usage\n```shell\nnpm install gulp-iconify --save-dev\n```\n\n###Simple example\n```javascript\ngulp.task('default', function() {\n    iconify({\n        src: './img/icons/*.svg'\n    });\n});\n```\n\nThis simple call defaults to the following:\n- SVGs will be passed through SVGO (and optimised)\n- Rendered PNGs will be saved in: './img/icons/png'\n- Rendered SCSS files will NOT be saved\n- Rendered CSS files will be saved in: './css'\n- If SVG has no width attribute, the default fallback will be 300px\n- If SVG has no height attribute, the default fallback will be 200px\n- The default styleTemplate fill be used (examples shown below)\n- The default styleTemplate will *not* use the height/width slugs\n\n###Customized example\n```javascript\ngulp.task('default', function() {\n    iconify({\n        src: './img/icons/*.svg',\n        pngOutput: './img/icons/png',\n        scssOutput: './scss',\n        cssOutput:  './css',\n        styleTemplate: '_icon_gen.scss.mustache',\n        defaultWidth: '300px',\n        defaultHeight: '200px',\n        svgoOptions: {\n            enabled: true,\n            options: {\n                plugins: [\n                    { removeUnknownsAndDefaults: false },\n                    { mergePaths: false }\n                ]\n            }\n        }\n    });\n});\n```\n\nNote: To disable SVGO, just set ```svgoOptions: { enabled: ___ }``` to anything but ```true``` .\n\n###Example (and default) styleTemplate:\n```mustache\n.icon {\n    background-repeat: no-repeat;\n\n    {{#items}}\n    &.icon-{{slug}} {\n        background-image: url('{{{datauri}}}');\n    }\n\n    {{/items}}\n}\n```\n\n###Example styleTemplate with height/width slugs:\n```mustache\n.icon {\n    background-repeat: no-repeat;\n\n    {{#items}}\n    &.icon-{{slug}} {\n        background-image: url('{{{datauri}}}');\n        width: {{width}}px;\n        height: {{height}}px;\n    }\n\n    {{/items}}\n}\n```",
  "readmeFilename": "README.md",
  "_id": "gulp-iconify@0.3.2",
  "dist": {
    "shasum": "07bd45fa49aa5ed8e7b483b3cbd5c24cd195c156"
  },
  "_from": "gulp-iconify@",
  "_resolved": "https://registry.npmjs.org/gulp-iconify/-/gulp-iconify-0.3.2.tgz"
}
